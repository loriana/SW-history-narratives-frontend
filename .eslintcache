[{"/Users/lorianaporumb/Desktop/my-app/src/index.js":"1","/Users/lorianaporumb/Desktop/my-app/src/App.js":"2","/Users/lorianaporumb/Desktop/my-app/src/reportWebVitals.js":"3","/Users/lorianaporumb/Desktop/my-app/src/Diff.js":"4","/Users/lorianaporumb/Desktop/my-app/src/Tabset.js":"5"},{"size":500,"mtime":1612359178754,"results":"6","hashOfConfig":"7"},{"size":5225,"mtime":1613321928786,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612358723624,"results":"9","hashOfConfig":"7"},{"size":3415,"mtime":1612697523239,"results":"10","hashOfConfig":"7"},{"size":1757,"mtime":1612990878684,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kj7dd6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/Users/lorianaporumb/Desktop/my-app/src/index.js",[],["26","27"],"/Users/lorianaporumb/Desktop/my-app/src/App.js",["28","29","30"],"/Users/lorianaporumb/Desktop/my-app/src/reportWebVitals.js",[],"/Users/lorianaporumb/Desktop/my-app/src/Diff.js",["31","32","33","34"],"import React, { PureComponent } from 'react';\nimport ReactDiffViewer, { DiffMethod } from 'react-diff-viewer';\n \nconst oldCode = `\nconst a = 10\nconst b = 10\nconst c = () => console.log('foo')\n \nif(a > 10) {\n  console.log('bar')\n}\n \nconsole.log('done')\n`;\nconst newCode = `const a = 10\nconst boo = 10\n \nif(a === 10) {\n  console.log('bar')\n}`;\n\n\n/*const oldCode = `// I had a little too much fun playing with composition here\n// that I created an ad-hoc DOM abstraction library\n// (It's certainly not perfect, but it provides many\n// helpers to construct and compose DOM elements)\nexport function list(listItems, ordered=false) {\n    const tag = ordered ? 'ol' : 'ul';\n    return container(listItems.map(text => textElement('li', text)), tag);\n}\n\nexport function setAttributes(element, attributes) {\n    for(let key in attributes) {\n        // deals with more deeply structured attributes (e.g., style)\n        if(typeof(attributes[key]) === 'object') {\n            setAttributes(element[key], attributes[key]);\n        } else {\n            element[key] = attributes[key];\n        }\n    }\n    return element;\n}\n\nexport function textElement(tag, text) {\n    const element = document.createElement(tag);\n    element.innerText = text;\n    return element;\n}\n\nexport function container(elements, tag='div') {\n    const container = document.createElement(tag);\n    for(let element of elements) {\n        container.appendChild(element);\n    }\n    return container;\n}`;\nconst newCode = `// I had a little too much fun playing with composition here\n// that I created an ad-hoc DOM abstraction library\n// (It's certainly not perfect, but it provides many\n// helpers to construct and compose DOM elements)\nexport function list(listItems, ordered=false) {\n    const tag = ordered ? 'ol' : 'ul';\n    return container(listItems.map(\n        el => typeof(el) === 'string' ?\n            textElement('li', el) :\n            container([el], 'li')), tag);\n}\n\nexport function setAttributes(element, attributes) {\n    for(let key in attributes) {\n        // deals with more deeply structured attributes (e.g., style)\n        if(typeof(attributes[key]) === 'object') {\n            setAttributes(element[key], attributes[key]);\n        } else {\n            element[key] = attributes[key];\n        }\n    }\n    return element;\n}\n\nexport function textElement(tag, text) {\n    const element = document.createElement(tag);\n    element.innerText = text;\n    return element;\n}\n\nexport function container(elements, tag='div') {\n    const container = document.createElement(tag);\n    for(let element of elements) {\n        container.appendChild(element);\n    }\n    return container;\n}`; */\n \nclass Diff extends PureComponent {\n    \n    highlightSyntax = (str) => {\n        if (!str) return;\n        return (\n          <pre\n            style={{ display: \"inline\" }}\n            dangerouslySetInnerHTML={{\n              __html: Prism.highlight(str, Prism.languages.javascript)\n            }}\n          />\n        );\n      };\n \n  render = () => {\n    let { oldCode } = this.props\n    let { newCode } = this.props\n    return (\n      <ReactDiffViewer\n        oldValue={oldCode}\n        newValue={newCode}\n        splitView={false}\n        renderContent={this.highlightSyntax}\n        useDarkTheme={false}\n        showDiffOnly={false}\n        disableWordDiff={true}\n        compareMethod={DiffMethod.SENTENCES}\n      />\n    );\n  };\n}\n\nexport default Diff;",["35","36"],"/Users/lorianaporumb/Desktop/my-app/src/Tabset.js",["37","38","39"],"import React, { Component } from 'react';\n\nimport { Tabs, Tab } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { parseDiff, Diff, Hunk, tokenize } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport refractor from 'refractor';\n\n\n\nclass Tabset extends Component {\n\n  renderToken = (token, defaultRender, i) => {\n    switch (token.type) {\n      case 'space':\n        console.log(token);\n        return (\n          <span key={i} className=\"space\">\n            {token.children && token.children.map((token, i) => renderToken(token, defaultRender, i))}\n          </span>\n        );\n      default:\n        return defaultRender(token, i);\n    }\n  };\n\n  customize_options(file) {\n    let file_path = file.newPath.split('.')\n    let extension = file_path[file_path.length - 1]\n\n    let options = {\n      highlight: true,\n      refractor: refractor,\n      language: extension\n    }\n    return options\n  }\n\n  get_active_tab(files) {\n    console.log(`ACTIVE PATH: ${files[0].newPath}`)\n    return files[0].newPath\n  }\n\n\n  render() {\n    let { files } = this.props\n\n    return (\n\n      <Tabs key={files.length} defaultActiveKey={this.get_active_tab(files)}>\n        {\n          files.map(file =>\n            <Tab key={file.newPath} eventKey={file.newPath} title={file.newPath}>\n              <div key={file.newPath} className=\"tab-item-wrapper\">\n                <Diff\n                  key={file.oldRevision + '-' + file.newRevision}\n                  viewType=\"unified\" diffType={file.type}\n                  hunks={file.hunks}\n                  tokens={tokenize(file.hunks, this.customize_options(file))}></Diff>\n              </div>\n            </Tab>)\n        }\n      </Tabs>\n    );\n  }\n}\n\nexport default Tabset;\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":21,"nodeType":"46","messageId":"47","endLine":5,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":5,"column":27,"nodeType":"46","messageId":"47","endLine":5,"endColumn":31},{"ruleId":"44","severity":1,"message":"49","line":5,"column":33,"nodeType":"46","messageId":"47","endLine":5,"endColumn":41},{"ruleId":"44","severity":1,"message":"50","line":4,"column":7,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"51","line":15,"column":7,"nodeType":"46","messageId":"47","endLine":15,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":103,"column":23,"nodeType":"46","messageId":"54","endLine":103,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":103,"column":44,"nodeType":"46","messageId":"54","endLine":103,"endColumn":49},{"ruleId":"40","replacedBy":"55"},{"ruleId":"42","replacedBy":"56"},{"ruleId":"44","severity":1,"message":"57","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":19},{"ruleId":"44","severity":1,"message":"48","line":6,"column":27,"nodeType":"46","messageId":"47","endLine":6,"endColumn":31},{"ruleId":"52","severity":1,"message":"58","line":20,"column":65,"nodeType":"46","messageId":"54","endLine":20,"endColumn":76},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Diff' is defined but never used.","Identifier","unusedVar","'Hunk' is defined but never used.","'tokenize' is defined but never used.","'oldCode' is assigned a value but never used.","'newCode' is assigned a value but never used.","no-undef","'Prism' is not defined.","undef",["59"],["60"],"'parseDiff' is defined but never used.","'renderToken' is not defined.","no-global-assign","no-unsafe-negation"]