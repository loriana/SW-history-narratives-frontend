[{"/Users/lorianaporumb/Desktop/my-app/src/index.js":"1","/Users/lorianaporumb/Desktop/my-app/src/App.js":"2","/Users/lorianaporumb/Desktop/my-app/src/reportWebVitals.js":"3","/Users/lorianaporumb/Desktop/my-app/src/Diff.js":"4","/Users/lorianaporumb/Desktop/my-app/src/Tabset.js":"5","/Users/lorianaporumb/Desktop/my-app/src/ArcComponent.js":"6"},{"size":500,"mtime":1612359178754,"results":"7","hashOfConfig":"8"},{"size":6058,"mtime":1613919677487,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612358723624,"results":"10","hashOfConfig":"8"},{"size":3415,"mtime":1612697523239,"results":"11","hashOfConfig":"8"},{"size":2474,"mtime":1613843978111,"results":"12","hashOfConfig":"8"},{"size":420,"mtime":1613918488254,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"kj7dd6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lorianaporumb/Desktop/my-app/src/index.js",[],["30","31"],"/Users/lorianaporumb/Desktop/my-app/src/App.js",["32","33","34"],"/Users/lorianaporumb/Desktop/my-app/src/reportWebVitals.js",[],"/Users/lorianaporumb/Desktop/my-app/src/Diff.js",["35","36","37","38"],"import React, { PureComponent } from 'react';\nimport ReactDiffViewer, { DiffMethod } from 'react-diff-viewer';\n \nconst oldCode = `\nconst a = 10\nconst b = 10\nconst c = () => console.log('foo')\n \nif(a > 10) {\n  console.log('bar')\n}\n \nconsole.log('done')\n`;\nconst newCode = `const a = 10\nconst boo = 10\n \nif(a === 10) {\n  console.log('bar')\n}`;\n\n\n/*const oldCode = `// I had a little too much fun playing with composition here\n// that I created an ad-hoc DOM abstraction library\n// (It's certainly not perfect, but it provides many\n// helpers to construct and compose DOM elements)\nexport function list(listItems, ordered=false) {\n    const tag = ordered ? 'ol' : 'ul';\n    return container(listItems.map(text => textElement('li', text)), tag);\n}\n\nexport function setAttributes(element, attributes) {\n    for(let key in attributes) {\n        // deals with more deeply structured attributes (e.g., style)\n        if(typeof(attributes[key]) === 'object') {\n            setAttributes(element[key], attributes[key]);\n        } else {\n            element[key] = attributes[key];\n        }\n    }\n    return element;\n}\n\nexport function textElement(tag, text) {\n    const element = document.createElement(tag);\n    element.innerText = text;\n    return element;\n}\n\nexport function container(elements, tag='div') {\n    const container = document.createElement(tag);\n    for(let element of elements) {\n        container.appendChild(element);\n    }\n    return container;\n}`;\nconst newCode = `// I had a little too much fun playing with composition here\n// that I created an ad-hoc DOM abstraction library\n// (It's certainly not perfect, but it provides many\n// helpers to construct and compose DOM elements)\nexport function list(listItems, ordered=false) {\n    const tag = ordered ? 'ol' : 'ul';\n    return container(listItems.map(\n        el => typeof(el) === 'string' ?\n            textElement('li', el) :\n            container([el], 'li')), tag);\n}\n\nexport function setAttributes(element, attributes) {\n    for(let key in attributes) {\n        // deals with more deeply structured attributes (e.g., style)\n        if(typeof(attributes[key]) === 'object') {\n            setAttributes(element[key], attributes[key]);\n        } else {\n            element[key] = attributes[key];\n        }\n    }\n    return element;\n}\n\nexport function textElement(tag, text) {\n    const element = document.createElement(tag);\n    element.innerText = text;\n    return element;\n}\n\nexport function container(elements, tag='div') {\n    const container = document.createElement(tag);\n    for(let element of elements) {\n        container.appendChild(element);\n    }\n    return container;\n}`; */\n \nclass Diff extends PureComponent {\n    \n    highlightSyntax = (str) => {\n        if (!str) return;\n        return (\n          <pre\n            style={{ display: \"inline\" }}\n            dangerouslySetInnerHTML={{\n              __html: Prism.highlight(str, Prism.languages.javascript)\n            }}\n          />\n        );\n      };\n \n  render = () => {\n    let { oldCode } = this.props\n    let { newCode } = this.props\n    return (\n      <ReactDiffViewer\n        oldValue={oldCode}\n        newValue={newCode}\n        splitView={false}\n        renderContent={this.highlightSyntax}\n        useDarkTheme={false}\n        showDiffOnly={false}\n        disableWordDiff={true}\n        compareMethod={DiffMethod.SENTENCES}\n      />\n    );\n  };\n}\n\nexport default Diff;",["39","40"],"/Users/lorianaporumb/Desktop/my-app/src/Tabset.js",["41","42","43"],"import React, { Component } from 'react';\n\nimport { Tabs, Tab } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { parseDiff, Diff, Hunk, tokenize } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport refractor from 'refractor';\n\n\n\nclass Tabset extends Component {\n\n  renderToken = (token, defaultRender, i) => {\n    switch (token.type) {\n      case 'space':\n        console.log(token);\n        return (\n          <span key={i} className=\"space\">\n            {token.children && token.children.map((token, i) => renderToken(token, defaultRender, i))}\n          </span>\n        );\n      default:\n        return defaultRender(token, i);\n    }\n  };\n\n  customize_options(file) {\n    let file_path = file.newPath.split('.')\n    let extension = file_path[file_path.length - 1]\n\n    let options = {\n      highlight: true,\n      refractor: refractor,\n      language: extension\n    }\n    return options\n  }\n\n\n  filter_files(files) {\n    let filtered_files = []\n    for (let file of files) {\n      let check = is_supported_extension(file.hunks, this.customize_options(file))\n      if (check.supported) {\n        filtered_files.push({\n          file: file,\n          check: check\n        })\n      }\n    }\n    return filtered_files\n  }\n\n\n  render() {\n    let { files } = this.props\n    let filtered_files = this.filter_files(files)\n\n    return (\n\n      <Tabs defaultActiveKey={filtered_files[0].file.newPath}>\n        {\n          filtered_files.map(item => {\n\n            let file = item.file\n            let check = item.check\n\n            if (check.supported) {\n\n              return (\n                <Tab key={file.newPath} eventKey={file.newPath} title={file.newPath}>\n              <div key={file.newPath} className=\"tab-item-wrapper\">\n                <Diff\n                  key={file.oldRevision + '-' + file.newRevision}\n                  viewType=\"unified\" diffType={file.type}\n                  hunks={file.hunks}\n                  tokens={check.tokens}></Diff>\n              </div>\n            </Tab>\n\n              );\n            }\n            return null;\n          })\n        }\n      </Tabs>\n    );\n  }\n}\n\n\nfunction is_supported_extension(hunks, options) {\n  let supported = true;\n  let tokens;\n  try {\n    tokens = tokenize(hunks, options)\n  } catch (error) {\n    supported = false;\n    tokens = null;\n    console.log(error);\n  }\n  return {\n    supported: supported,\n    tokens: tokens,\n  };\n}\n\nexport default Tabset;\n\n\n","/Users/lorianaporumb/Desktop/my-app/src/ArcComponent.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":6,"column":21,"nodeType":"50","messageId":"51","endLine":6,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":6,"column":27,"nodeType":"50","messageId":"51","endLine":6,"endColumn":31},{"ruleId":"48","severity":1,"message":"53","line":6,"column":33,"nodeType":"50","messageId":"51","endLine":6,"endColumn":41},{"ruleId":"48","severity":1,"message":"54","line":4,"column":7,"nodeType":"50","messageId":"51","endLine":4,"endColumn":14},{"ruleId":"48","severity":1,"message":"55","line":15,"column":7,"nodeType":"50","messageId":"51","endLine":15,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":103,"column":23,"nodeType":"50","messageId":"58","endLine":103,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":103,"column":44,"nodeType":"50","messageId":"58","endLine":103,"endColumn":49},{"ruleId":"44","replacedBy":"59"},{"ruleId":"46","replacedBy":"60"},{"ruleId":"48","severity":1,"message":"61","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":6,"column":27,"nodeType":"50","messageId":"51","endLine":6,"endColumn":31},{"ruleId":"56","severity":1,"message":"62","line":20,"column":65,"nodeType":"50","messageId":"58","endLine":20,"endColumn":76},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Diff' is defined but never used.","Identifier","unusedVar","'Hunk' is defined but never used.","'tokenize' is defined but never used.","'oldCode' is assigned a value but never used.","'newCode' is assigned a value but never used.","no-undef","'Prism' is not defined.","undef",["63"],["64"],"'parseDiff' is defined but never used.","'renderToken' is not defined.","no-global-assign","no-unsafe-negation"]